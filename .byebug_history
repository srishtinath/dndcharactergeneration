c
session[:coming_from_show]
c
nil
session[:coming_from_show]
session.delete :coming_from_show
c
session[:coming_from_show]
session
c
flash
c
flash[:coming_from_show]
c
flash[:coming_from_show]
c
session[:coming_from_show]
c
session[:coming_from_show]
c
@character
c
@characters
c
session[:user]["id"]
session[:user][:id]
session[:user]
@characters
c
Character.all.map {|char| char.user_id }
Character.all.map {|char| char.name char.user_id }
Character.all.map {|char| char.name, char.user_id }
Character.all.map {|char| char.name, char.user.id }
Character.all.map {|char| char.name, char.user.id}
Character.all.map {|char| char.name}
Character.name
Character.names
Character.all.names
Character.all.count
@user.characters
c
session[:user]
@user
c
session[:user]["name"]
session[:user][:name]
session[:user]
c
session[:user][:name]
session[:user]
c
@user
c
@user
c
params["user"]["name"]
params["user"]
params["user]
params
c
@user
c
@user
params[:name]
@user.nil?
@user
c
@user
c
@user
c
@user
c
@user
c
session[:character]
c
session[:character]
c
session[:character]
c
session[:character]
c
@character_spell
@character_spell.update(cs_params)
@character_spell = CharacterSpell.create(character: @character)
@character_spell
cs_params
@character
session[:character]
@character_spell
c
@character_ability
@character_abiliity
c
session[:character]
c
@user
c
session[:character]
c
@character
c
session[:character]
c
session[:character]
c
session[:character]
session
c
C
CharacterAbility.find_by(character:8)
params[:id]
c
session[:character]
c
@character
c
session[:character]["id"]
session[:character]
c
session[:character]
c
@character
c
@character
c
@character
c
@character
c
char_params
c
char_params
@user
c
flash[:character]
flash[:coming_from_show]
c
@character
c
@character_spell
c
@character.level
c
@character
c
flash[:character]
flash
c
@character
c
@character
exit
@character
c
params
exit
<<<<<<< HEAD
api.classes
api
@job
exit
api.abilities
exit
api
exit
api.abilities
api
exit
api.abilities
exit
api.abilities
=======
a1
c
exit
@job
a1
c
request_hash["results"].count
reqquest_hash["results"].count
request_hash["count"]
request_hash.count
exit
c
result["name"]
@description
@job
c
request_hash
>>>>>>> master
exit
c
exit
result
Job.find_by(name: class_name)
class_name
related_jobs
c
related_jobs
c
result
result["classes"]
exit
@description
@url
api.spells
exit
api.spells
exit
api.spells
api
exit
api.spells
exit
api.spells
exit
api.spells
api
exit
api.spells
exit
@api.print_classes
@jobs
@api
exit
api
exit
base_uri
api
api.classes
exit
api.classes
exit
base_uri
api.classes
api
api.classes
